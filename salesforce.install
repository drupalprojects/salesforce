<?php

use Drupal\Component\Serialization\Json;

/**
 * Purge Salesforce module state variables
 */
function salesforce_uninstall() {
  $delete = [
    'salesforce.consumer_key',
    'salesforce.consumer_secret',
    'salesforce.login_url',
    'salesforce.instance_url',
    'salesforce.access_token',
    'salesforce.refresh_token',
    'salesforce.identity',
    'salesforce.usage',
  ];
  \Drupal::state()->deleteMultiple($delete);
}

function salesforce_requirements($phase) {
  if ($phase != 'runtime') {
    return;
  }

  $response = FALSE;
  try {
    // Ping the howsmyssl web service to check TLS version support for this client.
    $raw_response = \Drupal::service('http_client')->get('https://www.howsmyssl.com/a/check', ['json' => TRUE, 'timeout' => 5]);
    $body = $raw_response->getBody();
    if (!empty($body)) {
      $body = $body->getContents();
      if (!empty($body)) {
        $response = Json::decode($body);
      }
    }
  }
  catch (Exception $e) {
    // noop
  }

  $requirements['salesforce_tls'] = [
    'title' => t('Salesforce TLS'),
    'value' => t('TLS 1.1+ Support'),
  ];
  // If we didn't get a good response, throw a warning.
  if (empty($response) || empty($response['tls_version'])) {
    $requirements['salesforce_tls'] += [
      'severity' => REQUIREMENT_WARNING,
      'description' => t('Drupal failed to connect to https://www.howsmyssl.com/a/check service to check TLS 1.1+ support for this client. Please ensure your OpenSSL client supports TLS 1.1+ before using Salesforce module.'),
    ];
    return $requirements;
  }
  // If we got a good response, and this client doesn't support TLS1.1+, throw an error.
  switch ($response['tls_version']) {
    case 'TLS 1.1':
    case 'TLS 1.2':
    case 'TLS 1.3':
      $requirements['salesforce_tls'] += [
        'severity' => REQUIREMENT_OK,
        'description' => t('OK: %version', ['%version' => $response['tls_version']]),
      ];
      break;

    default:
      $requirements['salesforce_tls'] += [
        'severity' => REQUIREMENT_ERROR,
        'description' => t('Unsupported: %version -- Salesforce API requires TLS 1.1+. Please upgrade your OpenSSL version before using Salesforce module.', ['%version' => $response['tls_version']]),
      ];
      break;
  }

  $requirements['salesforce_usage'] = [
    'title' => t('Salesforce usage'),
    'value' => t('API Limit Info'),
  ];
  $usage = FALSE;
  try {
    $usage = \Drupal::service('salesforce.client')->getApiUsage();
  }
  catch (Exception $e) {
    // noop
  }

  if (empty($usage)) {
    $requirements['salesforce_usage'] += [
      'severity' => REQUIREMENT_OK,
      'description' => t('Usage information unavailable'),
    ];
  }
  else {
    $usage = str_replace('api-usage=', '', $usage);
    dpm($usage);
    list($usage, $limit) = explode('/', $usage, 2);
    $pct = 'N/A';
    if ($limit > 0) {
      $pct = ($usage / $limit) * 100.0;
    }
    $args = [
      '%usage' => number_format($usage),
      '%limit' => number_format($limit),
      '%pct' => number_format($pct, 2) . '%'
    ];
    $requirements['salesforce_usage'] += [
      'description' => t('Usage: %usage requests of %limit limit (%pct) in the past 24 hours.', $args),
      'severity' => $pct >= 100 ? REQUIREMENT_WARNING : REQUIREMENT_OK,
    ];
  }

  return $requirements;
}

/**
 * Install new "Use Latest API version" boolean; defaults to TRUE.
 */
function salesforce_update_8001() {
  $settings = \Drupal::configFactory()->getEditable('salesforce.settings');
  $settings->set('use_latest', TRUE);
  $settings->save();
}
